 Install npm and express, nodemon, cors.
Create MD for JSON format.
 Start the server and listen on the specified port.

Create a route for the user profile; the request body will include the parameters to analyze the data. Initial testing now, with improvements and additions later.

Install mongoose and dotenv.
Connect to MongoDB and use a .env file for the DB URI/key.
Create a User Profile schema.
Install Joi for validation; on validation failures return HTTP 400 and include the error details.
Add a route to create a user profile and save it to the MongoDB collection with proper error handling.

- UI/UX with REACT.JS.
- Install vite+React.js+Bootstrap, Clean the CSS on appliction.
- A head component that will contain the app summary.
- Install formik and Joi for state managment form and validation managment, Setting initial values and onSubmit function. 
- A started form component that will contain the profile coustomer.
- A input component that will contain the chackbox input, select input, text area input and a regular input.


Add user profile creation flow with Axios integration
- Added local server URL config file (JSON)
- Installed Axios for async server requests
- Created httpService.js with base URL setup
- Implemented userProfile.js for user profile API requests
- Connected ProfileForm component with Formik onSubmit to create new user profile

Add client-side validation using Joi with user feedback
- Installed Joi for client-side form validation
- Implemented validation rules for form fields
- Added user-friendly feedback and guidance for validation errors

Add dedicated calculations module for BMR and TDEE health metrics
- Created a dedicated folder for health and nutrition calculations related to body composition and aesthetics
- Implemented BMRCalculation function based on the Mifflinâ€“St Jeor formula for men and women
- Implemented TDEECalculation function to estimate daily energy expenditure using the BMR value and activity level
- Integrated both functions into the user profile creation route
- Stored calculated BMR and TDEE values in MongoDB as part of the user profile document




